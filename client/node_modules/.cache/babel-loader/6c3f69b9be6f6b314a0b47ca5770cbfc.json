{"ast":null,"code":"var _jsxFileName = \"/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/ShoppingCartModal.js\";\n// React component to store a user's selected items to a cart modal\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input, Container } from 'reactstrap'; //Container = component that's hooked to redux\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addItem } from '../actions/itemActions';\nimport uuid from 'react-uuid';\nimport ShoppingList from './ShoppingList';\nimport CheckoutModal from './CheckoutModal';\nimport GuestShoppingList from './GuestShoppingList';\nimport GuestCheckoutModal from './GuestCheckoutModal';\n\nclass ShoppingCartModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.toggle();\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Shopping Cart\", React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Shopping Cart\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.props.isAuthenticated ? React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(ShoppingList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(CheckoutModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })) : React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(GuestShoppingList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(GuestCheckoutModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nShoppingCartModal.propTypes = {\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, null)(ShoppingCartModal);","map":{"version":3,"sources":["/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/ShoppingCartModal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","Input","Container","connect","PropTypes","addItem","uuid","ShoppingList","CheckoutModal","GuestShoppingList","GuestCheckoutModal","ShoppingCartModal","state","modal","toggle","setState","onChange","e","target","name","value","onSubmit","preventDefault","render","marginBottom","props","isAuthenticated","propTypes","bool","mapStateToProps","auth"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,KAPF,EAQEC,KARF,EASEC,SATF,QAUO,YAVP,C,CAYA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,MAAMC,iBAAN,SAAgClB,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCmB,KADwC,GAChC;AACNC,MAAAA,KAAK,EAAE;AADD,KADgC;;AAAA,SASxCC,MATwC,GAS/B,MAAM;AACb,WAAKC,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADP,OAAd;AAGD,KAbuC;;AAAA,SAexCG,QAfwC,GAe5BC,CAAD,IAAO;AAChB,WAAKF,QAAL,CAAc;AAAE,SAACE,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAA5B,OAAd;AACD,KAjBuC;;AAAA,SAmBxCC,QAnBwC,GAmB7BJ,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACK,cAAF;AAEA,WAAKR,MAAL;AACD,KAvBuC;AAAA;;AAyBxCS,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAFT;AAGE,MAAA,OAAO,EAAE,KAAKV,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAME,oBAAC,KAAD;AACE,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,KADrB;AAEE,MAAA,MAAM,EAAE,KAAKC,MAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKA,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,EAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKW,KAAL,CAAWC,eAAX,GACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADD,GAMC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAPJ,CALF,CANF,CADF,CADF;AA+BD;;AAzDuC;;AAApCf,iB,CAKGgB,S,GAAY;AACjBD,EAAAA,eAAe,EAAEtB,SAAS,CAACwB;AADV,C;;AAuDrB,MAAMC,eAAe,GAAGjB,KAAK,KAAK;AAEhCc,EAAAA,eAAe,EAAEd,KAAK,CAACkB,IAAN,CAAWJ;AAFI,CAAL,CAA7B;;AAKA,eAAevB,OAAO,CAAC0B,eAAD,EAAkB,IAAlB,CAAP,CAA+BlB,iBAA/B,CAAf","sourcesContent":["// React component to store a user's selected items to a cart modal\nimport React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Container\n} from 'reactstrap';\n\n//Container = component that's hooked to redux\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addItem } from '../actions/itemActions';\nimport uuid from 'react-uuid';\nimport ShoppingList from './ShoppingList';\nimport CheckoutModal from './CheckoutModal';\nimport GuestShoppingList from './GuestShoppingList';\nimport GuestCheckoutModal from './GuestCheckoutModal';\n\nclass ShoppingCartModal extends Component {\n  state = {\n    modal: false\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    this.toggle();\n  }\n\n  render() {\n    return (\n      <div>\n        <Button\n          color=\"dark\"\n          style={{ marginBottom: '2rem' }}\n          onClick={this.toggle}\n        >\n          Shopping Cart\n          <Modal\n            isOpen={this.state.modal}\n            toggle={this.toggle}\n          >\n            <ModalHeader toggle={this.toggle}>Shopping Cart</ModalHeader>\n            <ModalBody>\n              {this.props.isAuthenticated ?\n                <Container>\n                  <ShoppingList />\n                  <CheckoutModal />\n                </Container>\n                :\n                <Container>\n                  <GuestShoppingList />\n                  <GuestCheckoutModal />\n                </Container>\n              }\n            </ModalBody>\n          </Modal>\n        </Button>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, null)(ShoppingCartModal);"]},"metadata":{},"sourceType":"module"}