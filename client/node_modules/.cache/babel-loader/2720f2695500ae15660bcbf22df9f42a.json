{"ast":null,"code":"var _jsxFileName = \"/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/GuestCheckoutModal.js\";\n// Guest checkout component\n// Modal to be displayed after customer hits the checkout Button\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button, Modal, ModalHeader, ModalBody, Label, Row, Col, Form, FormGroup, Input, Alert } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { getGuestItems } from '../actions/guestItemActions';\nimport { loadGuest } from '../actions/guestActions';\nimport PropTypes from 'prop-types';\nimport ShippingAddressModal from './ShippingAddressModal';\nimport Orders from './Orders';\nimport { getOrder } from '../actions/orderActions';\n\nclass GuestCheckoutModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      name: '',\n      email: '',\n      streetAddres: '',\n      cityAddress: '',\n      stateAddress: '',\n      zipcode: '',\n      correctAddress: true\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal,\n        correctAddress: this.props.guest.guest.guest.shippingAddress\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.guest.guest.guest.shippingAddress == this.props.guest.guest.guest.shippingAddress) {}\n  }\n  /*\n  componentDidMount() {\n    this.props.getGuestItems(this.props.guest.guest.guest._id);\n    console.log(this.props.guest.guest.guest._id);\n  }\n  */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginTop: '2rem'\n      },\n      block: true,\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \"Proceed to Checkout\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, \" Checkout\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"Reivew Items\"), /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TransitionGroup, {\n      className: \"guest-checkout-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, this.props.item.items.map(({\n      _id,\n      name\n    }) => /*#__PURE__*/React.createElement(CSSTransition, {\n      key: _id,\n      timeout: 500,\n      classNames: \"fade\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, name))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      style: {\n        marginTop: '2rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, \" Provide Valid Shipping Address to Checkout\"), /*#__PURE__*/React.createElement(ShippingAddressModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Orders, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nGuestCheckoutModal.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired,\n  loadGuest: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.guestItems,\n  guest: state.guest,\n  order: state.orders\n});\n\nexport default connect(mapStateToProps, {\n  getGuestItems,\n  loadGuest,\n  getOrder\n})(GuestCheckoutModal);","map":{"version":3,"sources":["/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/GuestCheckoutModal.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","Modal","ModalHeader","ModalBody","Label","Row","Col","Form","FormGroup","Input","Alert","CSSTransition","TransitionGroup","connect","getGuestItems","loadGuest","PropTypes","ShippingAddressModal","Orders","getOrder","GuestCheckoutModal","state","modal","name","email","streetAddres","cityAddress","stateAddress","zipcode","correctAddress","toggle","setState","props","guest","shippingAddress","componentDidUpdate","prevProps","render","marginTop","item","items","map","_id","propTypes","getItems","func","isRequired","object","mapStateToProps","guestItems","order","orders"],"mappings":"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","sourcesContent":["// Guest checkout component\n// Modal to be displayed after customer hits the checkout Button\n\nimport React, { Component } from 'react';\nimport {\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Label,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Alert\n} from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { getGuestItems } from '../actions/guestItemActions';\nimport { loadGuest } from '../actions/guestActions';\nimport PropTypes from 'prop-types';\nimport ShippingAddressModal from './ShippingAddressModal';\nimport Orders from './Orders';\nimport { getOrder } from '../actions/orderActions';\n\n\nclass GuestCheckoutModal extends Component {\n  // State of the component\n  state = {\n    modal: false,\n    name: '',\n    email: '',\n    streetAddres: '',\n    cityAddress: '',\n    stateAddress: '',\n    zipcode: '',\n    correctAddress: true\n  };\n\n  // Prop-types to document the intended types of properties passed to components\n  static propTypes = {\n    getItems: PropTypes.func.isRequired,\n    item: PropTypes.object.isRequired,\n    loadGuest: PropTypes.func.isRequired\n  }\n\n  // Toggle the modal to open and close\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal,\n      correctAddress: this.props.guest.guest.guest.shippingAddress\n    });\n\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.guest.guest.guest.shippingAddress == this.props.guest.guest.guest.shippingAddress) {\n\n    }\n  }\n\n  /*\n  componentDidMount() {\n    this.props.getGuestItems(this.props.guest.guest.guest._id);\n    console.log(this.props.guest.guest.guest._id);\n  }\n  */\n\n  render() {\n    return (\n      <Container>\n        <Button\n          color=\"dark\"\n          style={{ marginTop: '2rem' }}\n          block\n          onClick={this.toggle}\n        >\n          Proceed to Checkout\n          </Button>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n        >\n          <ModalHeader toggle={this.toggle}> Checkout</ModalHeader>\n          <ModalBody>\n\n            <Label>Reivew Items</Label>\n            <ListGroup>\n              <TransitionGroup className=\"guest-checkout-list\">\n                {this.props.item.items.map(({ _id, name }) => (\n                  <CSSTransition key={_id} timeout={500} classNames=\"fade\">\n                    <ListGroupItem>\n                      {name}\n                    </ListGroupItem>\n                  </CSSTransition>\n                ))}\n              </TransitionGroup>\n            </ListGroup>\n            <Row>\n              <Container>\n\n              </Container>\n            </Row>\n            <Container>\n              <Row>\n                <Col>\n                  <Label style={{ marginTop: '2rem' }}> Provide Valid Shipping Address to Checkout</Label>\n                  <ShippingAddressModal></ShippingAddressModal>\n                </Col>\n              </Row>\n            </Container>\n            <Container>\n\n            </Container>\n            <Container>\n              <Orders></Orders>\n            </Container>\n          </ModalBody>\n        </Modal>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  item: state.guestItems,\n  guest: state.guest,\n  order: state.orders\n})\n\nexport default connect(mapStateToProps, { getGuestItems, loadGuest, getOrder })(GuestCheckoutModal);"]},"metadata":{},"sourceType":"module"}