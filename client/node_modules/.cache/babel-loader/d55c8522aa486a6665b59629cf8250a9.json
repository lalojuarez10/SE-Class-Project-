{"ast":null,"code":"import axios from 'axios';\nimport { GUEST_LOADING, GUEST_LOADED, REGISTER_SUCCESS } from \"./types\";\nexport const loadGuest = () => dispatch => {\n  // Dispatch calls the appropiate reducer, in this case load the guest from the backend\n  dispatch({\n    type: GUEST_LOADING\n  }); // Load the guest from the backend\n\n  axios.get('/api/guests').then(guest => dispatch({\n    type: GUEST_LOADED,\n    // tell the reducer the guest is loaded \n    payload: guest.data // store the guest in the reducer store\n\n  }));\n};\nexport const createGuest = () => dispatch => {\n  axios.post('/api/guests').then(guest => dispatch({\n    type: REGISTER_SUCCESS,\n    payload: guest.data\n  }));\n};","map":{"version":3,"sources":["/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/actions/guestActions.js"],"names":["axios","GUEST_LOADING","GUEST_LOADED","REGISTER_SUCCESS","loadGuest","dispatch","type","get","then","guest","payload","data","createGuest","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,gBAHF,QAIO,SAJP;AAMA,OAAO,MAAMC,SAAS,GAAG,MAAOC,QAAD,IAAc;AAC3C;AACAA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR,CAF2C,CAI3C;;AACAD,EAAAA,KAAK,CAACO,GAAN,CAAU,aAAV,EACGC,IADH,CACQC,KAAK,IAAIJ,QAAQ,CAAC;AACtBC,IAAAA,IAAI,EAAEJ,YADgB;AACY;AAClCQ,IAAAA,OAAO,EAAED,KAAK,CAACE,IAFO,CAEW;;AAFX,GAAD,CADzB;AAKD,CAVM;AAYP,OAAO,MAAMC,WAAW,GAAG,MAAOP,QAAD,IAAc;AAC7CL,EAAAA,KAAK,CAACa,IAAN,CAAW,aAAX,EACGL,IADH,CACQC,KAAK,IAAIJ,QAAQ,CAAC;AACtBC,IAAAA,IAAI,EAAEH,gBADgB;AAEtBO,IAAAA,OAAO,EAAED,KAAK,CAACE;AAFO,GAAD,CADzB;AAKD,CANM","sourcesContent":["import axios from 'axios';\nimport {\n  GUEST_LOADING,\n  GUEST_LOADED,\n  REGISTER_SUCCESS\n} from \"./types\";\n\nexport const loadGuest = () => (dispatch) => {\n  // Dispatch calls the appropiate reducer, in this case load the guest from the backend\n  dispatch({ type: GUEST_LOADING });\n\n  // Load the guest from the backend\n  axios.get('/api/guests')\n    .then(guest => dispatch({\n      type: GUEST_LOADED,               // tell the reducer the guest is loaded \n      payload: guest.data              // store the guest in the reducer store\n    }));\n}\n\nexport const createGuest = () => (dispatch) => {\n  axios.post('/api/guests')\n    .then(guest => dispatch({\n      type: REGISTER_SUCCESS,\n      payload: guest.data\n    }));\n} "]},"metadata":{},"sourceType":"module"}