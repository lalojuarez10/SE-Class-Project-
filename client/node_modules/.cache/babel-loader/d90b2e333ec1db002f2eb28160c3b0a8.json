{"ast":null,"code":"var _jsxFileName = \"/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/Orders.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { getGuestItems } from '../actions/guestItemActions';\nimport { loadGuest } from '../actions/guestActions';\nimport { getOrder, addOrder } from '../actions/orderActions';\nimport { loadUser } from '../actions/authActions';\nlet mainPage = false;\n\nclass Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      guest: ''\n    };\n\n    this.goToMainPage = e => {\n      e.preventDefault();\n      window.location.reload(false);\n      mainPage = true;\n      console.log(mainPage);\n      this.toggle();\n      this.forceUpdate();\n    };\n\n    this.toggle = () => {\n      if (this.props.guest.guest.guest.shippingAddress != '') {\n        this.setState({\n          modal: !this.state.modal\n        });\n        const newOrder = {\n          orderID: Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15),\n          userID: this.props.guest.guest.guest._id\n        };\n        this.props.addOrder(newOrder);\n      }\n    };\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, !mainPage ? /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      block: true,\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Place Order\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \" Order Information\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \" Items Purchased \"), /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TransitionGroup, {\n      className: \"order-items-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, this.props.item.items.map(({\n      _id,\n      name\n    }) => /*#__PURE__*/React.createElement(CSSTransition, {\n      key: _id,\n      timeout: 500,\n      classNames: \"fade\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, name))))), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, \"Order ID: \", this.props.order.orderID), /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, \" Shipping Address: \", this.props.guest.guest.guest.shippingAddress)), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Success: Click OK\", /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      block: true,\n      onClick: this.goToMainPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"OK\"))))) : /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Please Provide a Valid Address to Complete Order\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  item: state.guestItems,\n  guest: state.guest,\n  order: state.orders\n});\n\nexport default connect(mapStateToProps, {\n  getGuestItems,\n  loadGuest,\n  addOrder,\n  loadUser\n})(Orders);","map":{"version":3,"sources":["/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/components/Orders.js"],"names":["React","Component","Fragment","Container","ListGroup","ListGroupItem","Button","Modal","ModalHeader","ModalBody","Label","CSSTransition","TransitionGroup","connect","getGuestItems","loadGuest","getOrder","addOrder","loadUser","mainPage","Orders","state","modal","guest","goToMainPage","e","preventDefault","window","location","reload","console","log","toggle","forceUpdate","props","shippingAddress","setState","newOrder","orderID","Math","random","toString","substring","userID","_id","componentDidUpdate","render","marginBottom","item","items","map","name","order","mapStateToProps","guestItems","orders"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport {\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Label\n} from 'reactstrap';\n\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { getGuestItems } from '../actions/guestItemActions';\nimport { loadGuest } from '../actions/guestActions';\nimport { getOrder, addOrder } from '../actions/orderActions';\nimport { loadUser } from '../actions/authActions';\n\nlet mainPage = false;\n\nclass Orders extends Component {\n  state = {\n    modal: false,\n    guest: ''\n  }\n\n  goToMainPage = (e) => {\n    e.preventDefault();\n\n    window.location.reload(false)\n\n    mainPage = true;\n\n    console.log(mainPage);\n    this.toggle();\n    this.forceUpdate();\n  }\n\n  toggle = () => {\n    if (this.props.guest.guest.guest.shippingAddress != '') {\n      this.setState({\n        modal: !this.state.modal,\n      });\n\n      const newOrder = {\n        orderID: Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15),\n        userID: this.props.guest.guest.guest._id\n      }\n\n      this.props.addOrder(newOrder);\n    }\n\n  }\n\n  componentDidUpdate() {\n\n  }\n\n  render() {\n    return (\n      <Container>\n        {!mainPage ?\n          <Fragment>\n            <Button\n              color='dark'\n              style={{ marginBottom: '2rem' }}\n              block\n              onClick={this.toggle}\n            >\n              Place Order\n        </Button>\n\n            <Modal\n              isOpen={this.state.modal}\n              toggle={this.toggle}\n            >\n              <ModalHeader toggle={this.toggle}> Order Information</ModalHeader>\n              <ModalBody>\n                <Label> Items Purchased </Label>\n                <ListGroup>\n                  <TransitionGroup className=\"order-items-list\">\n                    {this.props.item.items.map(({ _id, name }) => (\n                      <CSSTransition key={_id} timeout={500} classNames=\"fade\">\n                        <ListGroupItem>\n                          {name}\n                        </ListGroupItem>\n                      </CSSTransition>\n                    ))}\n                  </TransitionGroup>\n                </ListGroup>\n                <Container>\n                  <Label>Order ID: {this.props.order.orderID}</Label>\n                  <Label> Shipping Address: {this.props.guest.guest.guest.shippingAddress}</Label>\n                </Container>\n                <Container>\n                  Success: Click OK\n            <Button\n                    color='dark'\n                    style={{ marginBottom: '2rem' }}\n                    block\n                    onClick={this.goToMainPage}\n                  >\n                    OK\n              </Button>\n                </Container>\n              </ModalBody>\n            </Modal>\n          </Fragment>\n          :\n          <Container>\n            Please Provide a Valid Address to Complete Order\n            </Container>\n\n        }\n\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  item: state.guestItems,\n  guest: state.guest,\n  order: state.orders\n})\n\nexport default connect(mapStateToProps, { getGuestItems, loadGuest, addOrder, loadUser })(Orders);"]},"metadata":{},"sourceType":"module"}