{"ast":null,"code":"import { ADD_ORDER, GET_ORDER, ORDER_LOADING } from './types';\nimport axios from 'axios';\nexport const setOrderLoading = () => {\n  return {\n    type: ORDER_LOADING\n  };\n};\nexport const getOrder = orderID => dispatch => {\n  dispatch(setOrderLoading());\n  axios.get(`/api/orders/${orderID}`).then(order => dispatch({\n    type: GET_ORDER,\n    payload: order.data\n  }));\n};\nexport const addOrder = order => dispatch => {\n  axios.post('/api/orders', order).then(res => dispatch({\n    type: ADD_ORDER,\n    payload: res.data\n  }));\n};","map":{"version":3,"sources":["/Users/josejuarez/Desktop/UH/Software Engineering/Project/client/src/actions/orderActions.js"],"names":["ADD_ORDER","GET_ORDER","ORDER_LOADING","axios","setOrderLoading","type","getOrder","orderID","dispatch","get","then","order","payload","data","addOrder","post","res"],"mappings":"AAAA,SACEA,SADF,EAEEC,SAFF,EAGEC,aAHF,QAIO,SAJP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMI,QAAQ,GAAIC,OAAD,IAAaC,QAAQ,IAAI;AAC/CA,EAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AAEAD,EAAAA,KAAK,CAACM,GAAN,CAAW,eAAcF,OAAQ,EAAjC,EACGG,IADH,CACQC,KAAK,IACTH,QAAQ,CAAC;AACPH,IAAAA,IAAI,EAAEJ,SADC;AAEPW,IAAAA,OAAO,EAAED,KAAK,CAACE;AAFR,GAAD,CAFZ;AAMD,CATM;AAWP,OAAO,MAAMC,QAAQ,GAAGH,KAAK,IAAIH,QAAQ,IAAI;AAC3CL,EAAAA,KAAK,CAACY,IAAN,CAAW,aAAX,EAA0BJ,KAA1B,EACGD,IADH,CACQM,GAAG,IAAIR,QAAQ,CAAC;AACpBH,IAAAA,IAAI,EAAEL,SADc;AAEpBY,IAAAA,OAAO,EAAEI,GAAG,CAACH;AAFO,GAAD,CADvB;AAKD,CANM","sourcesContent":["import {\n  ADD_ORDER,\n  GET_ORDER,\n  ORDER_LOADING\n} from './types';\n\nimport axios from 'axios';\n\nexport const setOrderLoading = () => {\n  return {\n    type: ORDER_LOADING\n  }\n}\n\nexport const getOrder = (orderID) => dispatch => {\n  dispatch(setOrderLoading());\n\n  axios.get(`/api/orders/${orderID}`)\n    .then(order =>\n      dispatch({\n        type: GET_ORDER,\n        payload: order.data\n      }))\n}\n\nexport const addOrder = order => dispatch => {\n  axios.post('/api/orders', order)\n    .then(res => dispatch({\n      type: ADD_ORDER,\n      payload: res.data\n    }))\n}"]},"metadata":{},"sourceType":"module"}